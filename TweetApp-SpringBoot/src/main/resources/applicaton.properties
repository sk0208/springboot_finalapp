#server.port=5000
#spring.data.mongodb.uri= mongodb://localhost:27017/tweet
#spring.data.mongodb.database = tweet


#spring.data.mongodb.uri = mongodb://sharath:sharath12345@tweetappsharathdb.cluster-cbzptjglpayg.ap-south-1.docdb.amazonaws.com:27017/tweetappdb?replicaSet=rs0&readPreference=secondaryPreferred&retryWrites=false      
  
  
management.security.enabled=false
management.endpoints.web.exposure.include=*
# logging level
logging.level.org.springframework=ERROR
logging.level.com.tweetapp=INFO

# output to a file
logging.file=app.log

# temp folder example
#logging.file=${java.io.tmpdir}/app.log

logging.pattern.file=%d %p %c{1.} [%t] %m%n

logging.pattern.console=%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n

## if no active profile, default is 'default'
##spring.profiles.active=prod

# root level
#logging.level.=INFO


#spring.kafka.consumer.bootstrap-servers=localhost:9092
#spring.kafka.consumer.group-id=tweet-group
#spring.kafka.consumer.auto-offset-reset=latest
#spring.kafka.consumer.key-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
#spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
#spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
#spring.kafka.consumer.properties.spring.deserializer.key.delegate.class=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.properties.spring.json.trusted.packages=com.tweetapp.entities
#
#spring.kafka.producer.bootstrap-servers=localhost:9092
#spring.kafka.producer.key-serializer = org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer = org.springframework.kafka.support.serializer.JsonSerializer
#
#kafka.topic = mytopic
#kafka.group-id = mygroupid